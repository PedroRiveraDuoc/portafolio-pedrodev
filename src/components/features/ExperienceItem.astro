---
import LinkInline from "@/components/common/LinkInline.astro"

interface Props {
  title: string
  company: string
  description: string[]
  link?: string
  date: string
}

const { title, company, description, link, date } = Astro.props
const showItemsInitially = 3; // Número de items a mostrar inicialmente
---

<div
  class="relative mx-12 pb-12 grid 
  before:absolute before:left-[-35px] 
  before:block before:h-full before:border-l-2 
  before:border-black/20 dark:before:border-white/15 
  before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
<!-- Columna izquierda: cargo, empresa, fecha -->
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <!-- Puntos del timeline -->
      <span class="text-blue-600 dark:text-blue-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <!-- Título del rol --> 
      <h3 class="text-2xl font-bold text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-400">{title}</h3>


      <!-- Empresa y fecha -->
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">{company}</h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80">{date}</time>
    </div>
  </div>

  <!-- Columna derecha: descripción -->
  <div class="relative flex flex-col gap-2 pb-4 text-black dark:text-white md:col-span-3">
    <ul class="list-disc space-y-2">
      <!-- Descripción corta -->
      {description.slice(0, showItemsInitially).map((item) => (
        <li class="ml-4">{item}</li>
      ))}
      <div class="hidden" id={`more-items-${title.replace(/\s+/g, '-')}`}>
        <!-- Descripción extendida -->
        {description.slice(showItemsInitially).map((item) => (
          <li class="ml-4">{item}</li>
        ))}
      </div>
    </ul>
    {description.length > showItemsInitially && (
      <button
        class="text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-400 font-medium mt-2 flex items-center gap-1 transition-colors"
        data-show-more={`more-items-${title.replace(/\s+/g, '-')}`}
      >
        <span class="show-more-text">Ver más</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-5 h-5 transform transition-transform show-more-icon"
          viewBox="0 0 24 24"
          stroke-width="2"
          stroke="currentColor"
          fill="none"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M6 9l6 6l6 -6"/>
        </svg>
      </button>
    )}
    
    {
      link && (
        <LinkInline href={link}>
          Saber más{" "}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-5 icon icon-tabler icon-tabler-chevron-right"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 6l6 6l-6 6" />
            </>
          </svg>
        </LinkInline>
      )
    }
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const showMoreButtons = document.querySelectorAll<HTMLButtonElement>('[data-show-more]');
    
    showMoreButtons.forEach(button => {
      button.addEventListener('click', () => {
        const targetId = button.getAttribute('data-show-more');
        if (!targetId) return;

        const moreItems = document.getElementById(targetId);
        const buttonText = button.querySelector<HTMLSpanElement>('.show-more-text');
        const buttonIcon = button.querySelector<SVGElement>('.show-more-icon');
        
        if (moreItems && buttonText && buttonIcon) {
          const isHidden = moreItems.classList.contains('hidden');
          moreItems.classList.toggle('hidden');
          
          buttonText.textContent = isHidden ? 'Ver menos' : 'Ver más';
          buttonIcon.classList.toggle('rotate-180', isHidden);
        }
      });
    });
  });
</script>
